# This is a basic workflow to help you get started with Actions

name: IotHub Infrastructure Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "deploy" job creates the required Azure infrastructure
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      LOCATION: westeurope
      RESOURCE_GROUP_NAME: rg-aks-demo
      ONPREM_RESOURCE_GROUP_NAME: rg-k3s-demo
      ENVIRONMENT_TYPE: dev
      AKS_DEPLOYMENT: yes
      IOT_DEPLOYMENT: yes
      VM_DEPLOYMENT: yes
      DPS_DEPLOYMENT: no
      FILE_SHARE_TYPE: SMB

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Print some basic information about the runners shell
      - name: Show configuration of runners shell
        run: |
          echo Current directory:
          pwd
          echo
          echo Directory listing:
          ls -al
          echo
          echo Workspace location:
          echo ${RUNNER_WORKSPACE}
          echo
          echo User context:
          whoami
          echo
          echo Disks:
          df
          echo
          echo Environment variables:
          env
        
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Create the Azure infrastructure
      - name: Create AKS/K3s/IotHub Infrastructure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment sub create \
              --name AKS_IoT_K3S_deploy \
              --location $LOCATION \
              --template-file $GITHUB_WORKSPACE/deployment/bicep/main.bicep \
              --parameters resourceGroupName=$RESOURCE_GROUP_NAME \
                           onpremResourceGroupName=$ONPREM_RESOURCE_GROUP_NAME \
                           environmentType=$ENVIRONMENT_TYPE \
                           aksDeployment=$AKS_DEPLOYMENT \
                           iotDeployment=$IOT_DEPLOYMENT \
                           vmDeployment=$VM_DEPLOYMENT \
                           aksClientId=${{ secrets.AKS_CLIENT_ID }} \
                           aksClientSecret=${{ secrets.AKS_CLIENT_SECRET }} \
                           fileShareType=$FILE_SHARE_TYPE \
                           dpsDeployment=$DPS_DEPLOYMENT \
                           cloudInitScriptUri=${{ secrets.CLOUD_INIT_SCRIPT_URI }} \
                           sshRSAPublicKey=${{ secrets.SSH_RSA_PUBLIC_KEY }}

            az deployment sub show \
              --name AKS_IoT_K3S_deploy \
              --query properties.outputs > deployment-output.json

            cat deployment-output.json

        #env:
        #  LOCATION: westeurope
        #  RESOURCE_GROUP_NAME: rg-aks-demo
        #  ONPREM_RESOURCE_GROUP_NAME: rg-k3s-demo
        #  ENVIRONMENT_TYPE: dev
        #  AKS_DEPLOYMENT: yes
        #  IOT_DEPLOYMENT: yes
        #  VM_DEPLOYMENT: yes
        #  DPS_DEPLOYMENT: no
        #  FILE_SHARE_TYPE: SMB
        #  REPO_ROOT: $GITHUB_WORKSPACE
